"use client";
// import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Header } from "@/components/shared/Header";
import { usePathname } from "next/navigation";
import { useEffect } from "react";
import { ProtectedRoute } from "./auth/hooks/ProtectedRoute";
import { useAuthStore } from "./auth/store/useAuthStore";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

function AuthProvider({
  children,
}: {
  children: React.ReactNode;
}) {
  const { checkAuth } = useAuthStore();

  useEffect(() => {
    checkAuth();
  }, [checkAuth]);

  return <>{children}</>;
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const path = usePathname();
  const isAuthPage = path.startsWith("/auth");

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        suppressHydrationWarning={true}
      >
        {/* TODO username avatar */}
        {isAuthPage ? (
          <div className="bg-gray-50 min-h-screen">{children}</div>
        ) : (
          <AuthProvider>
            <ProtectedRoute>
              <Header username="username" avatarImage="koala" />
              <div className="bg-gray-50 min-h-screen">{children}</div>
            </ProtectedRoute>
          </AuthProvider>
        )}
      </body>
    </html>
  );
}
