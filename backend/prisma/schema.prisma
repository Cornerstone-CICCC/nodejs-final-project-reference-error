// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Roles for users
enum Role {
    TEACHER
    STUDENT
    ADMIN
}

// Category for quiz
enum Category {
    PROGRAMMING
    SCIENCE
    HISTORY
    MATHEMATICS
    LANGUAGE
    GENERAL
    OTHER
}

// User model
model User {
    id                 String    @id @default(uuid())
    username           String    @unique
    email              String    @unique
    password           String
    role               Role      @default(STUDENT)
    avatar             String?
    createdAt          DateTime  @default(now())
    updatedAt          DateTime  @updatedAt
    
    // 統計情報（集計値） User quiz info
    correctAnswers     Int       @default(0)
    wrongAnswers       Int       @default(0)
    totalParticipations Int      @default(0)
    
    // 日別統計 Sessions
    activityLogs       UserActivityLog[]
    
    // 作成したクイズ Created quizzes add relation later
    createdQuizzes     Quiz[]    @relation("CreatorRelation")
}



// Logs structure
model UserActivityLog {
    id               String    @id @default(uuid())
    user             User      @relation(fields: [userId], references: [id])
    userId           String
    date             DateTime  @db.Date
    questionsAnswered Int      @default(0)
    correctAnswers   Int       @default(0)
    sessionsJoined   Int       @default(0)
    
    @@unique([userId, date])
}

// Quizz structure
model Quiz {
    id          String    @id @default(uuid())
    title       String
    category    Category  @default(GENERAL)
    creator     User      @relation("CreatorRelation", fields: [creatorId], references: [id])
    creatorId   String
    timeLimit   Int       @default(10)  // 制限時間（秒）
    questions   Question[]
    isActive    Boolean   @default(true)
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}

// Question structure
model Question {
    id            String   @id @default(uuid())
    quiz          Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
    quizId        String
    questionText  String
    options       String[]
    correctOption String   // options配列内の正解の値
    points        Int      @default(10)
}
